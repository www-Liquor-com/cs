#include <stdio.h>

#define MAXSIZE 100	//定义最大长度 

typedef struct{
	
	int item[MAXSIZE];	//用静态数组来存放数据元素 
	int length;		    //顺序表的当前长度 
	
}SqList;

/*
1.定义一个顺序表
2.销毁一个顺序表
3.对顺序表进行增删改查操作 
*/


//创建顺序表 
void InitList(SqList &list){		
	for(int i = 0; i < MAXSIZE; i++){
		list.item[i] = 0;	//设置初始值 
	}
	list.length = 0;		//表的初始长度为0
	printf("创建顺序表成功\n"); 
}


//遍历顺序表
void displayList(SqList list){
	for(int i = 0; i < list.length; i++){
		if(i == list.length - 1){
			printf("%d\n",list.item[i]);
		}
		else{
			printf("%d->",list.item[i]);
		}
		
	}
	printf("顺序表遍历完成\n");
} 


//增加元素
void addItem(SqList &list, int item){
	if(list.length < MAXSIZE){
		list.item[list.length] = item;
		list.length += 1;
		printf("元素已经添加完成\n");
	}
	else{
		printf("表已经满了，无法增加元素\n");
	}
	
} 


//插入元素
void insertItem(SqList &list, int index, int item){
	if(index < 1 || index > list.length + 1){
		printf("插入元素发生错误");
	}
	else{
		if(list.length == MAXSIZE){
			printf("插入元素发生错误");			
		}
		else{
			for(int i = list.length; i >= index; i--){
			list.item[i] = list.item[i - 1];
		}
		list.item[index - 1] = item;
		list.length += 1;
		}
		
	} 
} 

//删除元素(指定位置) 
void deleteItem(SqList &list, int index){
	if(list.length > 0){
		if(index >= 0 && index <= list.length - 1) {
			int num = list.length - 1 - index;
			for(int i = 0; i < num; i++){
				list.item[index] = list.item[index + 1];		
			}
			list.length -= 1;
		}
		else{
			printf("删除发生错误\n");
		}		 
	}
	else{
		printf("表已经空了，无法删除元素\n");
	}
} 



int main(){
	SqList list;
	InitList(list);
	addItem(list,1); 
	addItem(list,2); 
	addItem(list,3); 
	displayList(list);
	addItem(list,4); 
	deleteItem(list,2);
	insertItem(list,2,3);
	displayList(list);
	
	return 0;
} 
